// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _execute_HH_
#define _execute_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "execute_query.h"

namespace ap_rtl {

struct execute : public sc_module {
    // Port declarations 24
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > points_address0;
    sc_out< sc_logic > points_ce0;
    sc_in< sc_lv<32> > points_q0;
    sc_out< sc_lv<9> > points_address1;
    sc_out< sc_logic > points_ce1;
    sc_in< sc_lv<32> > points_q1;
    sc_out< sc_lv<2> > q_address0;
    sc_out< sc_logic > q_ce0;
    sc_in< sc_lv<32> > q_q0;
    sc_out< sc_lv<1> > result_address0;
    sc_out< sc_logic > result_ce0;
    sc_out< sc_logic > result_we0;
    sc_out< sc_lv<32> > result_d0;
    sc_in< sc_lv<32> > result_q0;
    sc_out< sc_lv<1> > result_address1;
    sc_out< sc_logic > result_ce1;
    sc_out< sc_logic > result_we1;
    sc_out< sc_lv<32> > result_d1;


    // Module declarations
    execute(sc_module_name name);
    SC_HAS_PROCESS(execute);

    ~execute();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    execute_query* query_U;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<2> > query_address0;
    sc_signal< sc_logic > query_ce0;
    sc_signal< sc_lv<32> > query_q0;
    sc_signal< sc_lv<2> > query_address1;
    sc_signal< sc_logic > query_ce1;
    sc_signal< sc_logic > query_we1;
    sc_signal< sc_lv<32> > query_q1;
    sc_signal< sc_lv<2> > i_i_reg_192;
    sc_signal< sc_lv<7> > index_assign_reg_203;
    sc_signal< sc_lv<7> > index_assign_reg_203_pp1_iter1_reg;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state9_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state11_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state13_pp1_stage0_iter2;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<32> > grp_fu_221_p2;
    sc_signal< sc_lv<32> > reg_227;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< bool > ap_block_state10_pp1_stage1_iter0;
    sc_signal< bool > ap_block_state12_pp1_stage1_iter1;
    sc_signal< bool > ap_block_pp1_stage1_11001;
    sc_signal< sc_lv<1> > exitcond_reg_450;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > grp_fu_215_p2;
    sc_signal< sc_lv<32> > tmp_i_reg_388;
    sc_signal< sc_lv<32> > tmp_4_i_reg_394;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > tmp_6_i_fu_237_p2;
    sc_signal< sc_lv<32> > tmp_6_i_reg_400;
    sc_signal< sc_lv<32> > tmp_3_i_fu_243_p2;
    sc_signal< sc_lv<32> > tmp_3_i_reg_406;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > tmp_5_i_fu_247_p2;
    sc_signal< sc_lv<32> > tmp_5_i_reg_411;
    sc_signal< sc_lv<32> > tmp_7_i_fu_251_p2;
    sc_signal< sc_lv<32> > tmp_7_i_reg_416;
    sc_signal< sc_lv<1> > result_addr_reg_421;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > result_addr_1_reg_426;
    sc_signal< sc_lv<1> > exitcond_i_fu_265_p2;
    sc_signal< sc_lv<1> > exitcond_i_reg_431;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<2> > i_fu_271_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<64> > tmp_i7_fu_277_p1;
    sc_signal< sc_lv<64> > tmp_i7_reg_440;
    sc_signal< sc_lv<1> > exitcond_fu_282_p2;
    sc_signal< sc_lv<10> > tmp_4_fu_304_p2;
    sc_signal< sc_lv<10> > tmp_4_reg_454;
    sc_signal< sc_lv<32> > tmp_4_i_i_fu_336_p2;
    sc_signal< sc_lv<32> > tmp_4_i_i_reg_474;
    sc_signal< sc_lv<7> > i_1_fu_342_p2;
    sc_signal< sc_lv<7> > i_1_reg_480;
    sc_signal< sc_lv<32> > grp_fu_231_p2;
    sc_signal< sc_lv<32> > tmp_3_i_i_reg_485;
    sc_signal< sc_lv<32> > tmp_5_i_i_fu_348_p2;
    sc_signal< sc_lv<32> > tmp_5_i_i_reg_490;
    sc_signal< sc_lv<32> > tmp_7_i_i_reg_495;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state9;
    sc_signal< bool > ap_block_pp1_stage1_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_lv<7> > ap_phi_mux_index_assign_phi_fu_207_p4;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > tmp_4_cast_fu_310_p1;
    sc_signal< sc_lv<64> > tmp_5_cast_fu_321_p1;
    sc_signal< sc_lv<64> > tmp_6_cast_fu_331_p1;
    sc_signal< bool > ap_block_pp1_stage1;
    sc_signal< sc_lv<32> > tmp_9_i_fu_259_p2;
    sc_signal< sc_lv<1> > tmp_i9_fu_367_p2;
    sc_signal< sc_lv<32> > distance_fu_361_p2;
    sc_signal< sc_lv<32> > index_assign_cast2_fu_352_p1;
    sc_signal< sc_lv<32> > tmp_fu_255_p2;
    sc_signal< sc_lv<9> > tmp_3_fu_292_p3;
    sc_signal< sc_lv<10> > p_shl_cast_fu_300_p1;
    sc_signal< sc_lv<10> > tmp_1_cast_fu_288_p1;
    sc_signal< sc_lv<10> > tmp_5_fu_315_p2;
    sc_signal< sc_lv<10> > tmp_6_fu_326_p2;
    sc_signal< sc_lv<32> > tmp1_fu_357_p2;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_pp0_stage0;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_pp1_stage0;
    static const sc_lv<10> ap_ST_fsm_pp1_stage1;
    static const sc_lv<10> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<7> ap_const_lv7_64;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<10> ap_const_lv10_2;
    static const sc_lv<32> ap_const_lv32_9;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp1_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp1_stage1();
    void thread_ap_block_pp1_stage1_11001();
    void thread_ap_block_pp1_stage1_subdone();
    void thread_ap_block_state10_pp1_stage1_iter0();
    void thread_ap_block_state11_pp1_stage0_iter1();
    void thread_ap_block_state12_pp1_stage1_iter1();
    void thread_ap_block_state13_pp1_stage0_iter2();
    void thread_ap_block_state6_pp0_stage0_iter0();
    void thread_ap_block_state7_pp0_stage0_iter1();
    void thread_ap_block_state9_pp1_stage0_iter0();
    void thread_ap_condition_pp0_exit_iter0_state6();
    void thread_ap_condition_pp1_exit_iter0_state9();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_index_assign_phi_fu_207_p4();
    void thread_ap_ready();
    void thread_distance_fu_361_p2();
    void thread_exitcond_fu_282_p2();
    void thread_exitcond_i_fu_265_p2();
    void thread_grp_fu_215_p2();
    void thread_grp_fu_221_p2();
    void thread_grp_fu_231_p2();
    void thread_i_1_fu_342_p2();
    void thread_i_fu_271_p2();
    void thread_index_assign_cast2_fu_352_p1();
    void thread_p_shl_cast_fu_300_p1();
    void thread_points_address0();
    void thread_points_address1();
    void thread_points_ce0();
    void thread_points_ce1();
    void thread_q_address0();
    void thread_q_ce0();
    void thread_query_address0();
    void thread_query_address1();
    void thread_query_ce0();
    void thread_query_ce1();
    void thread_query_we1();
    void thread_result_addr_1_reg_426();
    void thread_result_addr_reg_421();
    void thread_result_address0();
    void thread_result_address1();
    void thread_result_ce0();
    void thread_result_ce1();
    void thread_result_d0();
    void thread_result_d1();
    void thread_result_we0();
    void thread_result_we1();
    void thread_tmp1_fu_357_p2();
    void thread_tmp_1_cast_fu_288_p1();
    void thread_tmp_3_fu_292_p3();
    void thread_tmp_3_i_fu_243_p2();
    void thread_tmp_4_cast_fu_310_p1();
    void thread_tmp_4_fu_304_p2();
    void thread_tmp_4_i_i_fu_336_p2();
    void thread_tmp_5_cast_fu_321_p1();
    void thread_tmp_5_fu_315_p2();
    void thread_tmp_5_i_fu_247_p2();
    void thread_tmp_5_i_i_fu_348_p2();
    void thread_tmp_6_cast_fu_331_p1();
    void thread_tmp_6_fu_326_p2();
    void thread_tmp_6_i_fu_237_p2();
    void thread_tmp_7_i_fu_251_p2();
    void thread_tmp_9_i_fu_259_p2();
    void thread_tmp_fu_255_p2();
    void thread_tmp_i7_fu_277_p1();
    void thread_tmp_i9_fu_367_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
